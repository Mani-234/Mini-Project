# -*- coding: utf-8 -*-
"""Miniproject.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UwcajmLal8XzwlSaP5q1bQQhxyO0lwGi
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load combined CSV file (created earlier)
df = pd.read_csv("/content/combined_inventory_suppliers_120.csv")

# Preview data
print(df.head())

# Add a new column for inventory value
df['InventoryValue'] = df['UnitCost'] * df['QuantityInStock']

# Total inventory value
total_inventory_value = df['InventoryValue'].sum()
print("Total Inventory Value: $", round(total_inventory_value, 2))

# Group by Category
category_values = df.groupby('Category')['InventoryValue'].sum().sort_values(ascending=False)

# Bar chart
plt.figure(figsize=(10, 6))
sns.barplot(x=category_values.index, y=category_values.values)
plt.title('Inventory Value by Category')
plt.ylabel('Total Value ($)')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

df['Stockout'] = df['QuantityInStock'] == 0
print(df['Stockout'])

df['NeedsReorder'] = df['QuantityInStock'] <= df['ReorderLevel']
print(df['NeedsReorder'])

stockout_counts = df[df['Stockout']].groupby('Category').size().reset_index(name='StockoutCount')
stockout_pivot = stockout_counts.pivot_table(index='Category', values='StockoutCount')

plt.figure(figsize=(8, 5))
sns.heatmap(stockout_pivot, annot=True, cmap="Reds", fmt='g')
plt.title("Stockouts by Category")
plt.tight_layout()
plt.show()

reorder_trend = df.groupby("Category")['NeedsReorder'].sum().sort_values()

plt.figure(figsize=(10, 6))
sns.lineplot(x=reorder_trend.index, y=reorder_trend.values, marker='o')
plt.title("Reorder Events by Category")
plt.ylabel("Reorders Needed")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

cogs = df['InventoryValue'].sum()
average_inventory = df['QuantityInStock'].mean() * df['UnitCost'].mean()
stock_turnover = cogs / average_inventory

print("Stock Turnover:", round(stock_turnover, 2))

days_inventory = 365 / stock_turnover
print("Days of Inventory:", round(days_inventory, 2))

reorder_rate = df['NeedsReorder'].sum() / len(df)
print("Reorder Rate:", round(reorder_rate * 100, 2), "%")

stockout_rate = df['Stockout'].sum() / len(df)
print("Stockout Rate:", round(stockout_rate * 100, 2), "%")

print("\n--- KPI Summary ---")
print(f"Inventory Value: ${total_inventory_value:,.2f}")
print(f"Stock Turnover: {stock_turnover:.2f}")
print(f"Days of Inventory: {days_inventory:.2f}")
print(f"Reorder Rate: {reorder_rate:.2%}")
print(f"Stockout Rate: {stockout_rate:.2%}")